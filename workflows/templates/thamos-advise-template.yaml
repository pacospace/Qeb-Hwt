---
apiVersion: argoproj.io/v1alpha1
kind: WorkflowTemplate
metadata:
  name: thamos-advise
  annotations:
    thoth-station.ninja/template-version: 0.1.0-dev
  labels:
    app: thoth
    component: thamos-advise
spec:
  templates:
    - name: thamos-advise
      inputs:
        parameters:
          - name: "GITHUB_EVENT_TYPE"
          - name: "GITHUB_CHECK_RUN_ID"
          - name: "GITHUB_INSTALLATION_ID"
          - name: "GITHUB_BASE_REPO_URL"
          - name: "GITHUB_HEAD_REPO_URL"
          - name: "ORIGIN"
          - name: "REVISION"
          - name: "THOTH_HOST"
        artifacts:
          - name: repository
            path: /mnt/inputs/artifacts/repository
            git:
              repo: "{{inputs.parameters.GITHUB_HEAD_REPO_URL}}"
              revision: "{{inputs.parameters.REVISION}}"
      script:
        command:
          - python3
        name: thamos-advise
        image: "quay.io/pacospace/thamos:v0.8.1-dev"
        source: |
          import os
          import json
          import yaml
          from pathlib import Path

          from thoth.common import init_logging

          from thamos.lib import advise_here
          from thamos.config import config

          init_logging()

          os.chdir("/mnt/inputs/artifacts/repository")
          config.explicit_host = "{{inputs.parameters.THOTH_HOST}}"
          config.tls_verify = True

          artifact_path = Path.cwd()

          thoth_conf_file_path = artifact_path.joinpath(".thoth.yaml")

          if thoth_conf_file_path.exists():
            pass
          else:
            thoth_yaml = {
                'host': '{{inputs.parameters.THOTH_HOST}}',
                'tls_verify': 'false',
                'requirements_format': 'pipenv',
                'runtime_environments':[
                  {
                    'name':'fedora:31',
                    'operating_system':{
                        'name': 'fedora',
                        'version': '31',
                    },
                    'python_version': '3.7',
                    'recommendation_type':'latest'
                }
              ]
            }
            with open('.thoth.yaml', 'w') as yaml_file:
                yaml.dump(thoth_yaml, yaml_file, default_flow_style=False)

          analysis_id = advise_here(
            recommendation_type="latest",
            nowait=True,
            github_event_type="{{inputs.parameters.GITHUB_EVENT_TYPE}}",
            github_check_run_id="{{inputs.parameters.GITHUB_CHECK_RUN_ID}}",
            github_installation_id="{{inputs.parameters.GITHUB_INSTALLATION_ID}}",
            github_base_repo_url="{{inputs.parameters.GITHUB_BASE_REPO_URL}}",
            origin="{{inputs.parameters.ORIGIN}}"
          )
        resources:
          limits:
            cpu: 250m
            memory: 256Mi
          requests:
            cpu: 250m
            memory: 256Mi
